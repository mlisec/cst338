//Allows the reading and setting of the image
public class BarcodeImage implements Cloneable {
    
    //maintain the array size
    public static final int MAX_HEIGHT = 30;
    public static final int MAX_WIDTH = 65;
    private boolean[][] image_data;
    
    //default constructor that sets the image to blank(false)
    public BarcodeImage(){
        image_data = new boolean[MAX_WIDTH][MAX_HEIGHT];
        for (int x = 0; x < MAX_WIDTH; x++){
            for (int y = 0; y < MAX_HEIGHT; y++){
                image_data[x][y] = false;
            }
        }
    }
    
    //constructor that takes an array of strings and converts
    //it into a 2D array to hold the values for the image
    public BarcodeImage(String[] str_data){
        for(int j = 0; j < str_data.length; j++){
            String[] string = str_data[j].split("");
            for(int i = 0; i < string.length; i++){
                if (string[i] == "*"){
                    image_data[i][MAX_HEIGHT - j - 1] = true;
                }
                else{
                    image_data[i][MAX_HEIGHT - j - 1] = false;
                }
                
            }
            
        }
        
    }
    
    //method that allows the user to see the value
    //of the array at any point
    public boolean getPixel(int row, int col){
        
        //checks to see if the input was valid
        if(row < 0 || row > MAX_WIDTH - 1 || col < 0 || col > MAX_HEIGHT - 1){
            System.out.println("Invalid input.");
        }
        
        if (image_data[row][col] == true){
            return true;
        }
        //will return false if the location is false or
        //invalid input
        else{
            return false;
        }
    }
    
    //allows user to set any location to a boolean value
    public boolean setPixel(int row, int col, boolean value){
        //checks to see if the input is valid
        if(row < 0 || row > MAX_WIDTH - 1 || col < 0 || col > MAX_HEIGHT - 1){
            System.out.println("Invalid input.");
        }
        if (value == true){
            image_data[row][col] = true;
        }
        
        else{
            image_data[row][col] = false;
        }
        //will return true no matter what
        return true;
        
    }
    //this method creates a deep copy of the object
    public Object clone(){
        try{
            return super.clone();
        }
        catch (CloneNotSupportedException e){
            System.out.println("Cloning not allowed.");
            return this;
        }
    }

}
